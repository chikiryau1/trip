{"version":3,"sources":["ui/assets/right-arrow.svg","ui/components/List/Item.tsx","ui/components/List/index.tsx","ui/primitives/Preloader.ts","ui/components/Map/SimpleMark.tsx","ui/components/Map/Markers.tsx","ui/components/Map/GoogleMap.tsx","ui/components/Map/index.tsx","App.tsx","data/index.ts","index.tsx"],"names":["module","exports","__webpack_require__","p","Item","styled","div","_templateObject","StationWrapper","_templateObject2","Station","span","_templateObject3","Duration","_templateObject4","StationDate","_templateObject5","_templateObject6","right","text-align","Arrow","_templateObject7","arrow","Splitter","_templateObject8","List_Item","_ref","item","onClick","onMouseOver","react_default","a","createElement","startStation","name","time","start","duration","endStation","end","ListWrapper","List_templateObject","List","throttle","index","_this","props","setActive","_this2","this","items","map","key","parseInt","PureComponent","loadingAnimation","keyframes","Preloader_templateObject","Preloader_templateObject2","SimpleMark","position","active","children","radius","lib","icon","path","scale","strokeWeight","fillColor","fillOpacity","anchor","x","y","zIndex","Markers","Fragment","lat","lng","label","MapComponent","_this$props","activeItem","defaultZoom","defaultCenter","Markers_Markers","normDuration","withScriptjs","withGoogleMap","MapWrapper","Map_templateObject","MapContainer","Map_templateObject2","Map","GoogleMap","googleMapURL","loadingElement","style","height","Preloader","containerElement","mapElement","Wrapper","App_templateObject","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setActiveItem","activeId","state","setState","fetching","worker","Worker","postMessage","type","Promise","resolve","onmessage","e","data","initWorker","then","_this$state","List_List","Map_Map","GlobalStyle","createGlobalStyle","src_templateObject","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.fdd6f11c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/right-arrow.1ee4c3ee.svg\";","import React from 'react';\nimport {FormattedData as ListItemInterface} from \"../../../data\";\nimport styled from \"styled-components\";\nimport arrow from '../../assets/right-arrow.svg'\n\nconst Item = styled.div`\n  position: relative;\n  padding: 20px 10px;\n  box-shadow: 0 2px 0 rgba(0, 0, 0, .2);\n  cursor: pointer;\n  &:hover{\n    background-color: #F2F4F7;\n  }\n`;\n\nconst StationWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Station = styled.span`\n  font-weight: bold;\n  line-height: 1.5;\n`;\n\nconst Duration = styled.div`\n  font-size: 12px;\n  color: #555;\n  font-weight: 300;\n`;\n\nconst Day = styled.div`\n  position: relative;\n  font-size: 12px;\n  font-weight: 300;\n`;\n\ninterface StationProps {\n  right?:boolean\n}\n\nconst StationDate = styled.div<StationProps>`\n  font-size: 12px;\n  color: #555;\n  ${p => p.right ? {'text-align': 'right'} : {}}\n`;\n\nconst Arrow = styled.div`\n  display: inline-block;\n  width: 20px;\n  height: 20px;\n  background-image: url(${arrow})\n`;\n\nconst Splitter = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\n\ninterface ListItemProps {\n  item: ListItemInterface,\n  onClick: (event: React.MouseEvent<HTMLElement>) => void\n  onMouseOver: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nexport default ({item, onClick, onMouseOver}: ListItemProps) => (\n  <Item onClick={onClick} onMouseOver={onMouseOver}>\n    <StationWrapper>\n      <Station>\n        {item.startStation.name}\n        <StationDate>{item.time.start}</StationDate>\n      </Station>\n      <Splitter>\n        <Arrow/>\n        <Duration>{item.duration}</Duration>\n      </Splitter>\n      <Station>\n        {item.endStation.name}\n        <StationDate right>{item.time.end}</StationDate>\n      </Station>\n    </StationWrapper>\n    {/*<Day>{item.time.day}</Day>*/}\n  </Item>\n);\n","import React, {PureComponent} from 'react';\nimport styled from 'styled-components';\nimport throttle from 'lodash.throttle';\nimport map from 'lodash.map';\nimport {FormattedData as ListItemInterface} from \"../../../data\";\nimport ListItem from './Item'\n\nconst ListWrapper = styled.div`\n  height: 100%;\n  overflow-y: scroll;\n  flex-basis: 450px;\n`;\n\ninterface ListProps {\n  items: {\n    [index:number]: ListItemInterface\n  },\n  setActive: (a: number) => void,\n}\n\nexport default class List extends PureComponent<ListProps>{\n\n  onMouseOver = throttle((index:number) => {\n    this.props.setActive(index)\n  }, 200);\n\n  render(){\n    const {\n      items,\n    } = this.props;\n\n    return <ListWrapper>\n      {\n        map(items, (item:ListItemInterface, key) => {\n          const index = parseInt(key, 10);\n          return <ListItem\n            onMouseOver={() => this.onMouseOver(index)}\n            onClick={() => this.onMouseOver(index)}\n            item={item}\n            key={item.duration + index}\n          />\n        })\n      }\n    </ListWrapper>\n  }\n}","import styled, {keyframes} from 'styled-components'\n\nconst loadingAnimation = keyframes`\n  0% {\n    transform: rotate(0deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n`;\n\nexport default styled.div`\n  position: absolute;\n  top: calc(50% - 70px);\n  left: calc(50% - 70px);\n  border: 5px solid #f3f3f3; /* Light grey */\n  border-top: 5px solid #3498db; /* Blue */\n  border-radius: 50%;\n  width: 70px;\n  height: 70px;\n  animation: ${loadingAnimation} 1.1s linear infinite;\n`","import React from 'react';\nimport {Marker, MarkerProps} from 'react-google-maps';\n\ninterface MarkInterface extends MarkerProps {\n  active?: boolean,\n  children?: JSX.Element,\n  radius?: number\n}\n\nexport default ({position, active, children, radius}: MarkInterface) => (\n  <Marker\n    position={position}\n    icon={{\n      path: 'M 0 -15 m -5, 0 a 5,5 0 1,0 10,0 a 5,5 0 1,0 -10,0',\n      scale: active ? radius : 1,\n      strokeWeight: 0,\n      fillColor: active ? '#ff0000' : '#000',\n      fillOpacity: 1,\n      anchor:{\n        x: -2,\n        y: -10\n      }\n    }}\n    zIndex={active ? 2 : 1}\n  >\n    {children}\n  </Marker>\n);","import React, {PureComponent} from 'react';\nimport map from 'lodash.map';\nimport {MarkerProps} from 'react-google-maps';\nimport {FormattedData as ListItemInterface} from '../../../data';\nimport Mark from './SimpleMark';\n\ninterface MarkListInterface extends MarkerProps {\n  items: {\n    [index: number]: ListItemInterface\n  },\n}\n\nexport default class Markers extends PureComponent<MarkListInterface>{\n  render(){\n    const {\n      items\n    } = this.props;\n    return map(items, (item, key) => {\n      return <>\n        <Mark\n          key={item.time.start + key + item.time.end}\n          position={{\n            lat: item.startStation.lat,\n            lng: item.startStation.lng\n          }}\n          label={item.startStation.name}\n        />\n\n        <Mark\n          key={item.time.end + key + item.time.start}\n          position={{\n            lat: item.endStation.lat,\n            lng: item.endStation.lng\n          }}\n          label={item.endStation.name}\n        />\n      </>\n    })\n  }\n}\n\n","import React, {PureComponent} from 'react';\nimport {withScriptjs, withGoogleMap, GoogleMap, InfoWindow} from 'react-google-maps'\nimport {FormattedData as ListItemInterface} from '../../../data';\nimport Markers from './Markers'\nimport Mark from './SimpleMark'\n\ninterface MapInterface {\n  googleMapURL: string,\n  loadingElement: JSX.Element,\n  containerElement: JSX.Element,\n  mapElement: JSX.Element,\n  active: number,\n  items: {\n    [index: number]: ListItemInterface\n  },\n}\n\nclass MapComponent extends PureComponent<MapInterface> {\n  render() {\n    const {\n      items,\n      active\n    } = this.props;\n\n    const activeItem = items[active];\n\n    return <GoogleMap\n      defaultZoom={14}\n      defaultCenter={{lat: items[0].startStation.lat, lng: items[0].startStation.lng}}\n    >\n      <Markers items={items} />\n\n      <Mark\n        position={{\n          lat: activeItem.startStation.lat,\n          lng: activeItem.startStation.lng\n        }}\n        radius={activeItem.normDuration}\n        active\n      >\n        <InfoWindow\n          position={{\n            lat: activeItem.startStation.lat,\n            lng: activeItem.startStation.lng\n          }}\n        >\n          <span>{activeItem.startStation.name}</span>\n        </InfoWindow>\n      </Mark>\n\n      <Mark\n        position={{\n          lat: activeItem.endStation.lat,\n          lng: activeItem.endStation.lng\n        }}\n        radius={activeItem.normDuration}\n        active\n      >\n        <InfoWindow\n          position={{\n            lat: activeItem.endStation.lat,\n            lng: activeItem.endStation.lng\n          }}\n        >\n          <span>{activeItem.endStation.name}</span>\n        </InfoWindow>\n      </Mark>\n\n    </GoogleMap>\n  }\n}\n\nexport default withScriptjs(withGoogleMap(MapComponent));","import React, {PureComponent} from 'react';\nimport {Preloader} from '../../primitives';\nimport styled from 'styled-components';\nimport {FormattedData as ListItemInterface} from '../../../data';\nimport WrappedMap from './GoogleMap'\n\nconst MapWrapper = styled.div`\n  height: 100vh;\n  width: 100%;\n`;\n\nconst MapContainer = styled.div`\n  height: 100%;\n`;\n\ninterface MapComponentInterface {\n  items: {\n    [index: number]: ListItemInterface\n  },\n  active: number\n}\n\nexport default class Map extends PureComponent<MapComponentInterface> {\n  render() {\n    const {\n      items,\n      active\n    } = this.props;\n\n    return <WrappedMap\n      googleMapURL={'https://findanyjob.herokuapp.com/tripData/map'}\n      loadingElement={<div style={{height: `100%`}}><Preloader/></div>}\n      containerElement={<MapWrapper/>}\n      mapElement={<MapContainer/>}\n      active={active}\n      items={items}\n    />\n  }\n}\n","import React, {PureComponent} from 'react';\nimport styled from 'styled-components'\nimport {List, Map} from './ui/components'\nimport {Preloader} from './ui/primitives'\nimport {initWorker} from './data'\nimport {FormattedData as ListItemInterface} from './data';\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  width: 100%;\n  height: 100vh;\n  overflow: hidden;\n`;\n\ninterface State {\n  items: {\n    [index: number]: ListItemInterface\n  },\n  activeId: number,\n  fetching: boolean\n}\n\ninterface Props {\n\n}\n\nclass App extends PureComponent<Props, State> {\n  constructor(props: object) {\n    super(props);\n    this.state = {\n      items: [],\n      activeId: 0,\n      fetching: true\n    };\n\n    initWorker()\n      .then(data => {\n        return data as ListItemInterface[]\n      })\n      .then((data: ListItemInterface[]) => {\n        this.setState({\n          items: data,\n          activeId: 0,\n          fetching: false\n        })\n      });\n  };\n\n  setActiveItem = (activeId: number) => {\n    const {\n      activeId: oldActiveId\n    } = this.state;\n\n    if (oldActiveId !== activeId) {\n      this.setState({\n        activeId\n      })\n    }\n  };\n\n  render() {\n    const {\n      items,\n      activeId,\n      fetching\n    } = this.state;\n    return <Wrapper>\n      {\n        fetching ? <Preloader/> : <>\n          <List items={items} setActive={this.setActiveItem}/>\n          <Map items={items} active={activeId}/>\n        </>\n      }\n    </Wrapper>\n  }\n}\n\nexport default App;\n","export interface Station{\n  id: number,\n  name: string,\n  lat: number,\n  lng: number\n}\n\nexport interface FormattedData {\n  duration: number,\n  normDuration: number,\n  time: {\n    start: string,\n    end: string,\n    day: string,\n  },\n  startStation: Station,\n  endStation: Station,\n}\n\nexport function initWorker() {\n  const worker = new Worker('worker.js');\n  worker.postMessage({ type: 'init'});\n  return new Promise(resolve => {\n    worker.onmessage = (e) => resolve(e.data as FormattedData)\n  })\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { createGlobalStyle } from 'styled-components'\n\nconst GlobalStyle = createGlobalStyle`\n  body {\n    font-family: Lato,'Helvetica Neue',Arial,Helvetica,sans-serif;\n    font-size: 16px;\n  }\n\n  .flex{\n      box-shadow: none!important;\n  }\n\n  #root{\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      min-height: 100%;\n  }\n`;\n\nReactDOM.render(<>\n  <GlobalStyle/>\n  <App/>\n</>, document.getElementById('root'));"],"sourceRoot":""}